[
  {
    "MI_TYPE": "shell_script",
    "MI_NAME": "install-dependency",
    "MI_ITEM": "install dependency",
    "MI_DESC": "install docker & golang",
    "MI_SPLIT": "none",
    "MI_CONFIRM": false,
    "submenu": [
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "git-bootstrap.sh",
        "MI_ITEM": "git bootstrap",
        "MI_DESC": "install git, gitflow, config alias",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "docker",
        "MI_ITEM": "docker",
        "MI_DESC": "check, install, start docker",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false,
        "submenu": [
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "dependency/docker/docker-version.sh",
            "MI_ITEM": "docker version",
            "MI_DESC": " ",
            "MI_SPLIT": "none",
            "MI_CONFIRM": false
          },
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "dependency/docker/docker-info.sh",
            "MI_ITEM": "docker info",
            "MI_DESC": " ",
            "MI_SPLIT": "none",
            "MI_CONFIRM": false
          },
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "dependency/docker/install-docker.sh",
            "MI_ITEM": "install docker",
            "MI_DESC": " ",
            "MI_SPLIT": "none",
            "MI_CONFIRM": true
          },
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "dependency/docker/usermod.sh",
            "MI_ITEM": "add user to docker group",
            "MI_DESC": "$ sudo usermod -aG docker <username>",
            "MI_SPLIT": "none",
            "MI_CONFIRM": false
          },
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "dependency/docker/docker-status.sh",
            "MI_ITEM": "docker status",
            "MI_DESC": " ",
            "MI_SPLIT": "single",
            "MI_CONFIRM": false
          },
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "dependency/docker/start-docker.sh",
            "MI_ITEM": "start docker",
            "MI_DESC": " ",
            "MI_SPLIT": "none",
            "MI_CONFIRM": false
          },
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "dependency/docker/stop-docker.sh",
            "MI_ITEM": "stop docker",
            "MI_DESC": " ",
            "MI_SPLIT": "none",
            "MI_CONFIRM": true
          }
        ]
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "golang",
        "MI_ITEM": "golang",
        "MI_DESC": "download, install, config golang",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false,
        "submenu": [
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "dependency/golang/init-golang-env.sh",
            "MI_ITEM": "init env for golang",
            "MI_DESC": "set env GOROOT,GOPATH,PATH...",
            "MI_SPLIT": "none",
            "MI_CONFIRM": true
          },
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "dependency/golang/go-version.sh",
            "MI_ITEM": "go version",
            "MI_DESC": " ",
            "MI_SPLIT": "none",
            "MI_CONFIRM": false
          },
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "dependency/golang/install-golang.sh",
            "MI_ITEM": "install golang",
            "MI_DESC": " ",
            "MI_SPLIT": "single",
            "MI_CONFIRM": true
          }
        ]
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "qemu",
        "MI_ITEM": "qemu",
        "MI_DESC": "install qemu",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false,
        "submenu": [
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "dependency/qemu/qemu-version.sh",
            "MI_ITEM": "qemu version",
            "MI_DESC": " ",
            "MI_SPLIT": "none",
            "MI_CONFIRM": false
          },
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "dependency/qemu/install-qemu.sh",
            "MI_ITEM": "install qemu",
            "MI_DESC": " ",
            "MI_SPLIT": "single",
            "MI_CONFIRM": true
          }
        ]
      }
    ]
  },
  {
    "MI_TYPE": "shell_script",
    "MI_NAME": "build-hyper",
    "MI_ITEM": "build hyper from source",
    "MI_DESC": "git clone, go build hyper and hyperd",
    "MI_SPLIT": "single",
    "MI_CONFIRM": false,
    "submenu": [
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "hyper/show-hyper-repo-info.sh",
        "MI_ITEM": "show local hyper repo info",
        "MI_DESC": "list files, show branches, tags and status",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "hyper/git-clone-hyper.sh",
        "MI_ITEM": "git clone hyper repo",
        "MI_DESC": " ",
        "MI_SPLIT": "single",
        "MI_CONFIRM": true
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "hyper/git-pull-hyper.sh",
        "MI_ITEM": "git pull hyper repo",
        "MI_DESC": " ",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "hyper/git-checkout-hyper.sh",
        "MI_ITEM": "git checkout branch",
        "MI_DESC": " ",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "hyper/install-deps-hyper.sh",
        "MI_ITEM": "install depends",
        "MI_DESC": "$ ./make_deps.sh",
        "MI_SPLIT": "single",
        "MI_CONFIRM": false
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "hyper/go-build-hyper.sh",
        "MI_ITEM": "build hyper and hyperd",
        "MI_DESC": "build with go",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false
      }
    ]
  },
  {
    "MI_TYPE": "shell_script",
    "MI_NAME": "build-hyperinit",
    "MI_ITEM": "build hyperinit from source",
    "MI_DESC": "git clone, configure, make initrd-dvm.image",
    "MI_SPLIT": "none",
    "MI_CONFIRM": false,
    "submenu": [
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "hyperinit/show-hyperinit-repo-info.sh",
        "MI_ITEM": "show local hyperinit repo info",
        "MI_DESC": "list files, show branches, tags and status",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "hyperinit/git-clone-hyperinit.sh",
        "MI_ITEM": "git clone hyperinit repo",
        "MI_DESC": " ",
        "MI_SPLIT": "single",
        "MI_CONFIRM": true
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "hyperinit/git-pull-hyperinit.sh",
        "MI_ITEM": "git pull hyperinit repo",
        "MI_DESC": " ",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "hyperinit/git-checkout-hyperinit.sh",
        "MI_ITEM": "git checkout branch",
        "MI_DESC": " ",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "hyperinit/install-deps-hyperinit.sh",
        "MI_ITEM": "install depends",
        "MI_DESC": "install autoconf & automake",
        "MI_SPLIT": "single",
        "MI_CONFIRM": false
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "hyperinit/gcc-build-hyperinit.sh",
        "MI_ITEM": "build hyperinit",
        "MI_DESC": "./autogen.sh => ./configure => make",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "hyperinit/put-kernel-to-tmpfs.sh",
        "MI_ITEM": "put kernel to tmpfs",
        "MI_DESC": " ",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "hyperinit/set-cbfs-bios-path.sh",
        "MI_ITEM": "set {cbfs.rom,bios.bin} path",
        "MI_DESC": "/var/lib/dvm or /var/run/dvm",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false
      }
    ]
  },
  {
    "MI_TYPE": "shell_script",
    "MI_NAME": "manage-hyperd",
    "MI_ITEM": "manage hyperd",
    "MI_DESC": "modify config, start hyperd",
    "MI_SPLIT": "single",
    "MI_CONFIRM": false,
    "submenu": [
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "hyper/test-hyperd/select-hyperd-config.sh",
        "MI_ITEM": "select config",
        "MI_DESC": " ",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "hyper/test-hyperd/start-hyperd.sh",
        "MI_ITEM": "start hyperd normal",
        "MI_DESC": " ",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "hyper/test-hyperd/start-hyperd.sh -v=3",
        "MI_ITEM": "start hyperd with -v=3",
        "MI_DESC": " ",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false
      }
    ]
  },
  {
    "MI_TYPE": "shell_script",
    "MI_NAME": "use-hyper-cli",
    "MI_ITEM": "use hyper cli",
    "MI_DESC": " ",
    "MI_SPLIT": "none",
    "MI_CONFIRM": false,
    "submenu": [
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "hyper-test-cli-list",
        "MI_ITEM": "list",
        "MI_DESC": "list vm, pod, container",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false,
        "submenu": [
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "hyper/test-cli/hyper-list.sh pod",
            "MI_ITEM": "list pod",
            "MI_DESC": " ",
            "MI_SPLIT": "none",
            "MI_CONFIRM": false
          },
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "hyper/test-cli/hyper-list.sh container",
            "MI_ITEM": "list container",
            "MI_DESC": " ",
            "MI_SPLIT": "none",
            "MI_CONFIRM": false
          },
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "hyper/test-cli/hyper-list.sh vm",
            "MI_ITEM": "list vm",
            "MI_DESC": " ",
            "MI_SPLIT": "none",
            "MI_CONFIRM": false
          }
        ]
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "hyper-test-cli-pod",
        "MI_ITEM": "pod",
        "MI_DESC": " ",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false,
        "submenu": [
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "hyper/test-cli/hyper-list.sh pod",
            "MI_ITEM": "list pod",
            "MI_DESC": " ",
            "MI_SPLIT": "none",
            "MI_CONFIRM": false
          },
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "hyper/test-cli/hyper-show-test-pod.sh",
            "MI_ITEM": "show test pod",
            "MI_DESC": " ",
            "MI_SPLIT": "none",
            "MI_CONFIRM": false
          },
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "hyper/test-cli/hyper-start-pod.sh",
            "MI_ITEM": "create & start pod",
            "MI_DESC": "create and start a pod",
            "MI_SPLIT": "none",
            "MI_CONFIRM": false
          },
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "hyper/test-cli/hyper-stop-pod.sh",
            "MI_ITEM": "stop pod",
            "MI_DESC": "stop running pod(s)",
            "MI_SPLIT": "none",
            "MI_CONFIRM": false
          },
          {
            "MI_TYPE": "shell_script",
            "MI_NAME": "hyper/test-cli/hyper-rm-pod.sh",
            "MI_ITEM": "remove pod",
            "MI_DESC": "remove stopped pod(s)",
            "MI_SPLIT": "none",
            "MI_CONFIRM": false
          }
        ]
      }
    ]
  },
  {
    "MI_TYPE": "shell_script",
    "MI_NAME": "hyper-test",
    "MI_ITEM": "test hyper",
    "MI_DESC": " ",
    "MI_SPLIT": "single",
    "MI_CONFIRM": false,
    "submenu": [
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "test/check-test-env.sh",
        "MI_ITEM": "check test env",
        "MI_DESC": "count container, pod, qemu process, tap device",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "test/clear-test-env.sh",
        "MI_ITEM": "clear test env",
        "MI_DESC": "clear all pod and qemu process",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "test/measure-startup-time.sh",
        "MI_ITEM": "measure pod startup time",
        "MI_DESC": " ",
        "MI_SPLIT": "single",
        "MI_CONFIRM": false
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "test/measure-replace-time.sh",
        "MI_ITEM": "measure pod replace time",
        "MI_DESC": " ",
        "MI_SPLIT": "none",
        "MI_CONFIRM": false
      },
      {
        "MI_TYPE": "shell_script",
        "MI_NAME": "test/view-memory-usage.sh",
        "MI_ITEM": "view memory usage",
        "MI_DESC": "memory usage in host os, and container",
        "MI_SPLIT": "single",
        "MI_CONFIRM": false
      }
    ]
  }
]